apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-01-23T20:17:25Z"
    generateName: jenkins-5d97b67cf4-
    labels:
      app: jenkins
      pod-template-hash: 5d97b67cf4
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"df1b6489-b9aa-443a-97eb-c5dec3ea4852"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"jenkins"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":50000,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/jenkins_home"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/docker.sock"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector:
            .: {}
            f:app: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"docker-socket"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"jenkins-vol"}:
              .: {}
              f:name: {}
              f:persistentVolumeClaim:
                .: {}
                f:claimName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2021-01-23T20:17:25Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.244.1.17"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2021-01-23T20:17:53Z"
    name: jenkins-5d97b67cf4-c2kt5
    namespace: jenkins
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: jenkins-5d97b67cf4
      uid: df1b6489-b9aa-443a-97eb-c5dec3ea4852
    resourceVersion: "368366"
    selfLink: /api/v1/namespaces/jenkins/pods/jenkins-5d97b67cf4-c2kt5
    uid: be008958-e82d-464b-8cdc-647b7ecc79e4
  spec:
    containers:
    - image: karimfadl/jenkins-docker
      imagePullPolicy: Always
      name: jenkins
      ports:
      - containerPort: 8080
        name: http-port
        protocol: TCP
      - containerPort: 50000
        name: jnlp-port
        protocol: TCP
      resources: {}
      securityContext:
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/jenkins_home
        name: jenkins-vol
      - mountPath: /var/run/docker.sock
        name: docker-socket
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-lrhfg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: pool-jyot41pzb-3z283
    nodeSelector:
      app: jenkins
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: jenkins-vol
      persistentVolumeClaim:
        claimName: jenkins-pvc
    - hostPath:
        path: /var/run/docker.sock
        type: ""
      name: docker-socket
    - name: default-token-lrhfg
      secret:
        defaultMode: 420
        secretName: default-token-lrhfg
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-01-23T20:17:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-01-23T20:17:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-01-23T20:17:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-01-23T20:17:25Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://a5d1594e128d5d8f83157fd741e6355985feb7efbed5577fd39e6cf67828bc5b
      image: karimfadl/jenkins-docker:latest
      imageID: docker-pullable://karimfadl/jenkins-docker@sha256:7dd6f38516becc227ad7b62767c5bac993404764b2e3e72d44de6c21bc5f8899
      lastState: {}
      name: jenkins
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-01-23T20:17:52Z"
    hostIP: 10.133.0.5
    phase: Running
    podIP: 10.244.1.17
    podIPs:
    - ip: 10.244.1.17
    qosClass: BestEffort
    startTime: "2021-01-23T20:17:25Z"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubernetes.digitalocean.com/load-balancer-id: e966cd4b-bf3c-4292-aa12-965e4cef02bc
    creationTimestamp: "2021-01-23T19:16:52Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:externalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":80,"protocol":"TCP"}:
              .: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: kubectl
      operation: Update
      time: "2021-01-23T19:16:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.digitalocean.com/load-balancer-id: {}
          f:finalizers:
            .: {}
            v:"service.kubernetes.io/load-balancer-cleanup": {}
        f:status:
          f:loadBalancer:
            f:ingress: {}
      manager: digitalocean-cloud-controller-manager
      operation: Update
      time: "2021-01-23T19:18:00Z"
    name: jenkins
    namespace: jenkins
    resourceVersion: "361700"
    selfLink: /api/v1/namespaces/jenkins/services/jenkins
    uid: 13574af2-23a3-4a3e-98a8-00420ae975b5
  spec:
    clusterIP: 10.245.157.153
    externalTrafficPolicy: Cluster
    ports:
    - nodePort: 32150
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      app: jenkins
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 178.128.138.159
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2021-01-23T19:16:52Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:ports:
            .: {}
            k:{"port":50000,"protocol":"TCP"}:
              .: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: kubectl
      operation: Update
      time: "2021-01-23T19:16:52Z"
    name: jenkins-jnlp
    namespace: jenkins
    resourceVersion: "361540"
    selfLink: /api/v1/namespaces/jenkins/services/jenkins-jnlp
    uid: ea1f24d6-a6b3-440c-997c-d6f22a8f3447
  spec:
    clusterIP: 10.245.102.73
    ports:
    - port: 50000
      protocol: TCP
      targetPort: 50000
    selector:
      app: jenkins
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-01-23T20:17:25Z"
    generation: 1
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"jenkins"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":50000,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/jenkins_home"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/docker.sock"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:nodeSelector:
                .: {}
                f:app: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"docker-socket"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"jenkins-vol"}:
                  .: {}
                  f:name: {}
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
      manager: kubectl
      operation: Update
      time: "2021-01-23T20:17:25Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2021-01-23T20:17:53Z"
    name: jenkins
    namespace: jenkins
    resourceVersion: "368372"
    selfLink: /apis/apps/v1/namespaces/jenkins/deployments/jenkins
    uid: c49007f5-48b5-4a56-bdfb-97358ce08f2f
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: jenkins
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: jenkins
      spec:
        containers:
        - image: karimfadl/jenkins-docker
          imagePullPolicy: Always
          name: jenkins
          ports:
          - containerPort: 8080
            name: http-port
            protocol: TCP
          - containerPort: 50000
            name: jnlp-port
            protocol: TCP
          resources: {}
          securityContext:
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/jenkins_home
            name: jenkins-vol
          - mountPath: /var/run/docker.sock
            name: docker-socket
        dnsPolicy: ClusterFirst
        nodeSelector:
          app: jenkins
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: jenkins-vol
          persistentVolumeClaim:
            claimName: jenkins-pvc
        - hostPath:
            path: /var/run/docker.sock
            type: ""
          name: docker-socket
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2021-01-23T20:17:53Z"
      lastUpdateTime: "2021-01-23T20:17:53Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2021-01-23T20:17:25Z"
      lastUpdateTime: "2021-01-23T20:17:53Z"
      message: ReplicaSet "jenkins-5d97b67cf4" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-01-23T20:17:25Z"
    generation: 1
    labels:
      app: jenkins
      pod-template-hash: 5d97b67cf4
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c49007f5-48b5-4a56-bdfb-97358ce08f2f"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:replicas: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
              f:pod-template-hash: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"jenkins"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":50000,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/jenkins_home"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/docker.sock"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:nodeSelector:
                .: {}
                f:app: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"docker-socket"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"jenkins-vol"}:
                  .: {}
                  f:name: {}
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2021-01-23T20:17:53Z"
    name: jenkins-5d97b67cf4
    namespace: jenkins
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: jenkins
      uid: c49007f5-48b5-4a56-bdfb-97358ce08f2f
    resourceVersion: "368367"
    selfLink: /apis/apps/v1/namespaces/jenkins/replicasets/jenkins-5d97b67cf4
    uid: df1b6489-b9aa-443a-97eb-c5dec3ea4852
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: jenkins
        pod-template-hash: 5d97b67cf4
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: jenkins
          pod-template-hash: 5d97b67cf4
      spec:
        containers:
        - image: karimfadl/jenkins-docker
          imagePullPolicy: Always
          name: jenkins
          ports:
          - containerPort: 8080
            name: http-port
            protocol: TCP
          - containerPort: 50000
            name: jnlp-port
            protocol: TCP
          resources: {}
          securityContext:
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/jenkins_home
            name: jenkins-vol
          - mountPath: /var/run/docker.sock
            name: docker-socket
        dnsPolicy: ClusterFirst
        nodeSelector:
          app: jenkins
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: jenkins-vol
          persistentVolumeClaim:
            claimName: jenkins-pvc
        - hostPath:
            path: /var/run/docker.sock
            type: ""
          name: docker-socket
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
